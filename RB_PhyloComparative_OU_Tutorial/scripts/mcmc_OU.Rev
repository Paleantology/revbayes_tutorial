################################################################################
#
# MCMC analysis example in primates
# 
# Model:
# Ornstein-Uhlenbeck model
#
#
# author: Sebastian Hoehna
#
################################################################################

########
# Data #
########

# read the data
cont_data <- readContinuousCharacterData("data/primates_lht.nex")

cont_data.excludeAll()
cont_data.includeCharacter(5) 


# get some useful variables from the data
n_tips <- cont_data.ntaxa()
n_nodes <- 2*n_tips - 1
n_branches <- 2*n_tips - 2

moves = VectorMoves()



########
# Tree #
########

# work under fixed topology
treeArray <- readTrees("data/Primates_tree.nex")
psi <- treeArray[1]



######
# OU #
######


log_optim ~ dnUniform(-1000,10^6)
moves.append( mvSlide(log_optim,delta=10,tune=true,weight=2) )

# use the optim as the root value
logmass[n_nodes] := log_optim

logAlpha ~ dnUniform(-1,1)
moves.append( mvSlide(logAlpha,delta=10,tune=true,weight=2) )
alpha := 10^logAlpha


# sigma: variance per unit of time of the Brownian motion
logSigma ~ dnUniform(-1,1)
sigma := 10^logSigma

moves.append( mvSlide(logSigma, delta=1.0, tune=true, weight=2.0) )


# univariate Ornstein-Uhlenbeck process along the tree # parameterized by sigma
for (i in (n_nodes-1):(n_tips+1) ) {
  logmass[i] ~ dnOrnsteinUhlenbeck( x0=logmass[psi.parent(i)], theta=log_optim, alpha=alpha, sigma=sigma, time=psi.branchLength(i) )
  # moves on the Ornstein-Uhlenbeck process
  moves.append( mvSlide( logmass[i], delta=10, tune=true ,weight=2) )
}

for (i in n_tips:1 ) {
  logmass[i] ~ dnOrnsteinUhlenbeck( x0=logmass[psi.parent(i)], theta=log_optim, alpha=alpha, sigma=sigma, time=psi.branchLength(i) )
  # condition Brownian model on quantitative trait data (first column of the dataset)
  logmass[i].clamp(cont_data.getTaxon(psi.nodeName(i))[1])
}




########
# MCMC #
########

mymodel = model(sigma)

monitors[1] = mnScreen(printgen=1000, log_optim, alpha, sigma)
monitors[2] = mnModel(filename="output/OU.log",printgen=10, separator = TAB)
monitors[3] = mnExtNewick(filename="output/primates_mass_OU_ext.trees", isNodeParameter=TRUE, printgen=10, separator = TAB, tree=psi, logmass)

 
mymcmc = mcmc(mymodel, monitors, moves)
mymcmc.burnin(generations=10000,tuningInterval=250)
mymcmc.run(generations=30000)

treetrace = readTreeTrace("output/primates_mass_OU_ext.trees", treetype="clock")
map_tree = mapTree(treetrace,"output/primates_mass_OU_ext_MAP.tree")

q()

