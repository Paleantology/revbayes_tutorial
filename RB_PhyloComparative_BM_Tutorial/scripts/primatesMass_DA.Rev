moves = VectorMoves()

# read the data 
contData <- readContinuousCharacterData("data/primates_lhtlog.nex")

contData.excludeAll()
contData.includeCharacter(1) 
#contData.excludeCharacter(2:11)

# work under fixed topology
treeArray <- readTrees("data/primates.tree")
psi <- treeArray[1]

# sigma: variance per unit of time of the Brownian motion
logSigma ~ dnUniform(-5,5)
sigma := 10^logSigma

moves.append( mvSlide(logSigma, delta=1.0, tune=true, weight=2.0) )


# univariate Brownian process along the tree
# parameterized by sigma
rootlogmass ~ dnUniform(-100,100)

moves.append( mvSlide(rootlogmass,delta=10,tune=true,weight=2) )

numNodes = psi.nnodes()
numTips = psi.ntips()

logmass[numNodes] := rootlogmass

# univariate Brownian process along the tree # parameterized by sigma
for (i in (numNodes-1):(numTips+1) ) {
  logmass[i] ~ dnNormal( logmass[psi.parent(i)], sd=sigma*sqrt(psi.branchLength(i)) )
  # moves on the Brownian process
  dnMultivariateNormal()
  moves.append( mvSlide( logmass[i], delta=10, tune=true ,weight=2) )
}

for (i in numTips:1 ) {
  logmass[i] ~ dnNormal( logmass[psi.parent(i)], sd=sigma*sqrt(psi.branchLength(i)) )
  # condition Brownian model on quantitative trait data (second column of the dataset)
  logmass[i].clamp(contData.getTaxon(psi.nodeName(i))[1])
}
    
# create the model
mymodel = model(sigma)

# on screen, we will monitor only the correlation coefficient and the mean value of each trait
monitors[1] = mnScreen(printgen=10000, sigma)

# a model monitor
monitors[2] = mnModel(filename="output/primates_mass_DA.log", printgen=10, separator = TAB)
 
 
monitors[3] = mnExtNewick(filename="output/primates_mass_DA_ext.trees", isNodeParameter=TRUE, printgen=10, separator = TAB, tree=psi, logmass)
    
mymcmc = mcmc(mymodel, monitors, moves)

mymcmc.burnin(generations=5000, tuningInterval=250)

mymcmc.run(50000)

treetrace = readTreeTrace("output/primates_mass_DA_ext.trees", treetype="clock")
map_tree = mapTree(treetrace,"output/primates_mass_DA_ext_MAP.tree")

