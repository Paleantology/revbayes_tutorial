################################################################################
#
# MCMC analysis of endocranial volume in primates
# 
# Model:
# Ornstein-Uhlenbeck model
#
#
# author: Sebastian Hoehna
#
################################################################################

moves = VectorMoves()

# read the data 
contData <- readContinuousCharacterData("data/primates_lhtlog.nex")

contData.excludeAll()
contData.includeCharacter(1) 
#contData.excludeCharacter(2:11)

# work under fixed topology
treeArray <- readTrees("data/primates.tree")
psi <- treeArray[1]

# sigma: variance per unit of time of the Brownian motion
logSigma ~ dnUniform(-5,5)
sigma := 10^logSigma

moves.append( mvSlide(logSigma, delta=1.0, tune=true, weight=2.0) )

rootlogmass ~ dnUniform(-100,100)
moves.append( mvSlide(rootlogmass,delta=10,tune=true,weight=2) )

# univariate Brownian process along the tree
# parameterized by sigma
logmass ~ dnPhyloBrownianMVN(psi, branchRates=1.0, siteRates=sigma, rootStates=rootlogmass, nSites=1)

logmass.clamp( contData )

# create the model
mymodel = model(sigma)

# on screen, we will monitor only the correlation coefficient and the mean value of each trait
monitors[1] = mnScreen(printgen=10000, sigma)

# a model monitor
monitors[2] = mnFile(filename="output/primates_mass_MVN.log", printgen=10, separator = TAB, sigma, rootlogmass)
 
mymcmc = mcmc(mymodel, monitors, moves)

mymcmc.burnin(generations=10000, tuningInterval=250)
mymcmc.run(300000)

#q()
