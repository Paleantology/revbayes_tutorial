moves = VectorMoves()

# read the data 
contData <- readContinuousCharacterData("data/primates_lhtlog.nex")

contData.excludeCharacter(5:11)

# work under fixed topology
treeArray <- readTrees("data/primates.tree")
psi <- treeArray[1]

# sigma: variance per unit of time of the Brownian motion
logSigma ~ dnUniform(-5,5)
sigma := 10^logSigma

moves.append( mvSlide(logSigma, delta=1.0, tune=true, weight=2.0) )

perSiteRates ~ dnDirichlet([1,1,1,1])
moves.append( mvSimplexElementScale(perSiteRates,alpha=10,tune=true,weight=4) )

for (i in 1:4) {
   rootlogmass[i] ~ dnUniform(-100,100)
   moves.append( mvSlide(rootlogmass[i],delta=10,tune=true,weight=2)  )
}

# univariate Brownian process along the tree
# parameterized by sigma
logmass ~ dnPhyloBrownianMVN(psi, branchRates=1.0, siteRates=sigma*perSiteRates, rootStates=rootlogmass, nSites=4)
logmass.clamp( contData )

# create the model
mymodel = model(sigma)

# on screen, we will monitor only the correlation coefficient and the mean value of each trait
monitors[1] = mnScreen(printgen=10000, sigma)

# a model monitor
monitors[2] = mnModel(filename="output/primates_mass_multiBM_ind.log", printgen=10, separator = TAB)
 
mymcmc = mcmc(mymodel, monitors, moves)

mymcmc.burnin(generations=50000, tuningInterval=250)

mymcmc.run(500000)


