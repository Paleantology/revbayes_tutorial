############################################################################################
#   File: timetree tutorial DPP relaxed-clock model specification file
############################################################################################

#################################################
########### DPP model on branch rates ###########
#################################################

### the variable for the base rate
### with a lognormal prior
### and a scale move
br_M <- 5.4E-3
br_s <- 0.05
br_mu <- ln(br_M) - ((br_s * br_s) * 0.5)
base_rate ~ dnLnorm(br_mu, br_s)
moves.append( mvScale(base_rate,lambda=0.25,tune=true,weight=5.0) )

### get the number of branches in the tree
n_branches <- 2 * n_taxa - 2

### the concentration parameter of the DPP set to an expected value that leads to ~ 3 rate categories
### the value of the concentration will be assigned a fully conditional gamma hyperprior
pr_mean_cats <- 3.0
mean_CP <- fnDPPConcFromMean(pr_mean_cats, n_branches) 
cp_shape <- 2.0
cp_rate <- cp_shape / mean_CP
concentration ~ dnGamma(cp_shape, cp_rate)

### the base-distribution, G0, from which the rate for each category is drawn
### here it is a gamma distribution
g0_a <- 4.0
g0_b <- 8.0
g0 = dnGamma(g0_a, g0_b)

### the vector of branch rates are given a Dirichlet process prior
### this is conditioned on the concentration parameter, the base distribution, and the number of branches
branch_rates ~ dnDPP(concentration=concentration, baseDistribution=g0, numElements=n_branches) 

### the branch-rates used in the phylogenetic CTMC are a function of the DPP branch rates and the base rate
branch_subrates := branch_rates * base_rate

### and important deterministic node computed from the vector of branch rates
### this parameter is also needed for the Gibbs move on the gamma-distributed concentration parameter
n_cats := fnNumUniqueInVector(branch_rates) 

### a helpful parameter to monitor
mean_rt := mean(branch_rates) 

### the Gibbs moves for the DPP-distributed variable
### these moves are always accepted and are never re-tuned
moves.append( mvDPPScaleCatVals(branch_rates, ln(2.0), 3.0) )
moves.append( mvDPPAllocateAuxGibbs(branch_rates, 4, 3.0) )
moves.append( mvDPPScaleCatAllocateAux(branch_rates, ln(2.0), 4, 6.0) )
moves.append( mvDPPGibbsConcentration(concentration, n_cats, cp_shape, cp_rate, n_branches, 6.0) )

source("RevBayes_scripts/m_GTR.Rev")

### the full phylogenetic CTMC
phySeq ~ dnPhyloCTMC(tree=timetree, Q=Q, branchRates=branch_subrates, nSites=n_sites, type="DNA")

### attach the observed sequence data
phySeq.clamp(D)
